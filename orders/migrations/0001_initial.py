# Generated by Django 5.0.7 on 2025-10-02 11:54

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('store', '0002_alter_category_options_alter_productimage_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ShippingRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do Serviço')),
                ('carrier', models.CharField(max_length=100, verbose_name='Transportadora')),
                ('min_weight', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=8, verbose_name='Peso Mínimo (kg)')),
                ('max_weight', models.DecimalField(decimal_places=3, default=Decimal('30.000'), max_digits=8, verbose_name='Peso Máximo (kg)')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Preço Base')),
                ('price_per_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Preço por Kg Adicional')),
                ('delivery_time', models.PositiveIntegerField(default=7, verbose_name='Prazo de Entrega (dias)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Tarifa de Frete',
                'verbose_name_plural': 'Tarifas de Frete',
                'ordering': ['delivery_time', 'base_price'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Número do Pedido')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('confirmed', 'Confirmado'), ('processing', 'Processando'), ('shipped', 'Enviado'), ('delivered', 'Entregue'), ('cancelled', 'Cancelado'), ('refunded', 'Reembolsado')], default='pending', max_length=20, verbose_name='Status')),
                ('payment_status', models.CharField(choices=[('pending', 'Pendente'), ('processing', 'Processando'), ('completed', 'Concluído'), ('failed', 'Falhou'), ('cancelled', 'Cancelado'), ('refunded', 'Reembolsado')], default='pending', max_length=20, verbose_name='Status do Pagamento')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=50, verbose_name='Sobrenome')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('shipping_address_line_1', models.CharField(max_length=255, verbose_name='Endereço')),
                ('shipping_address_line_2', models.CharField(blank=True, max_length=255, verbose_name='Complemento')),
                ('shipping_city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('shipping_state', models.CharField(max_length=2, verbose_name='Estado')),
                ('shipping_postal_code', models.CharField(max_length=9, verbose_name='CEP')),
                ('shipping_country', models.CharField(default='Brasil', max_length=50, verbose_name='País')),
                ('billing_same_as_shipping', models.BooleanField(default=True, verbose_name='Cobrança igual à entrega')),
                ('billing_address_line_1', models.CharField(blank=True, max_length=255, verbose_name='Endereço de Cobrança')),
                ('billing_address_line_2', models.CharField(blank=True, max_length=255, verbose_name='Complemento de Cobrança')),
                ('billing_city', models.CharField(blank=True, max_length=100, verbose_name='Cidade de Cobrança')),
                ('billing_state', models.CharField(blank=True, max_length=2, verbose_name='Estado de Cobrança')),
                ('billing_postal_code', models.CharField(blank=True, max_length=9, verbose_name='CEP de Cobrança')),
                ('billing_country', models.CharField(blank=True, default='Brasil', max_length=50, verbose_name='País de Cobrança')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Subtotal')),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Custo do Frete')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Impostos')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Desconto')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Total')),
                ('shipping_method', models.CharField(blank=True, max_length=100, verbose_name='Método de Entrega')),
                ('tracking_number', models.CharField(blank=True, max_length=100, verbose_name='Código de Rastreamento')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('shipped_at', models.DateTimeField(blank=True, null=True, verbose_name='Enviado em')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Entregue em')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(help_text='Nome do produto no momento da compra', max_length=200, verbose_name='Nome do Produto')),
                ('product_sku', models.CharField(blank=True, help_text='SKU do produto no momento da compra', max_length=50, verbose_name='SKU do Produto')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantidade')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Preço Unitário')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Preço Total')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order', verbose_name='Pedido')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Item do Pedido',
                'verbose_name_plural': 'Itens do Pedido',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(blank=True, max_length=100, unique=True, verbose_name='ID do Pagamento')),
                ('payment_method', models.CharField(choices=[('credit_card', 'Cartão de Crédito'), ('debit_card', 'Cartão de Débito'), ('pix', 'PIX'), ('boleto', 'Boleto Bancário'), ('bank_transfer', 'Transferência Bancária')], max_length=20, verbose_name='Método de Pagamento')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('processing', 'Processando'), ('completed', 'Concluído'), ('failed', 'Falhou'), ('cancelled', 'Cancelado'), ('refunded', 'Reembolsado')], default='pending', max_length=20, verbose_name='Status')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor')),
                ('gateway', models.CharField(blank=True, max_length=50, verbose_name='Gateway')),
                ('gateway_transaction_id', models.CharField(blank=True, max_length=100, verbose_name='ID da Transação no Gateway')),
                ('gateway_response', models.JSONField(blank=True, null=True, verbose_name='Resposta do Gateway')),
                ('installments', models.PositiveIntegerField(default=1, verbose_name='Parcelas')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Data de Vencimento')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='Pago em')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='orders.order', verbose_name='Pedido')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_number'], name='orders_orde_order_n_f3ada5_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user', 'created_at'], name='orders_orde_user_id_37fed6_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status', 'payment_status'], name='orders_orde_status_c50fb7_idx'),
        ),
    ]
